<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Docker - 标签 - </title>
    <link>https://www.qilitang.top/tags/docker/</link>
    <description>Docker - 标签 - </description>
    <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>zhangspring@live.com (Qilitang)</managingEditor>
      <webMaster>zhangspring@live.com (Qilitang)</webMaster><lastBuildDate>Mon, 20 Nov 2023 16:06:11 &#43;0800</lastBuildDate><atom:link href="https://www.qilitang.top/tags/docker/" rel="self" type="application/rss+xml" /><item>
  <title>Docker 镜像制作教程:针对不同语言的精简策略</title>
  <link>https://www.qilitang.top/posts/docker-%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B-%E9%92%88%E5%AF%B9%E4%B8%8D%E5%90%8C%E8%AF%AD%E8%A8%80%E7%9A%84%E7%B2%BE%E7%AE%80%E7%AD%96%E7%95%A5/</link>
  <pubDate>Mon, 20 Nov 2023 16:06:11 &#43;0800</pubDate>
  <author>Qilitang</author>
  <guid>https://www.qilitang.top/posts/docker-%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B-%E9%92%88%E5%AF%B9%E4%B8%8D%E5%90%8C%E8%AF%AD%E8%A8%80%E7%9A%84%E7%B2%BE%E7%AE%80%E7%AD%96%E7%95%A5/</guid>
  <description><![CDATA[Docker 镜像制作教程：针对不同语言的精简策略 原文链接： Docker Images : Part II - Details Specific To Different Languages 对于刚接触容器的人来说，他们很容易被自己制作的 Docker 镜像体积吓到，我只需要一个几 MB 的可执行文件而已，为何镜像的体积会达到 1 GB 以上？本文将会介绍几个奇技淫巧来帮助你精简镜像，同时又不牺牲开发人员和运维人员的操作便利性。本系列文章将分为三]]></description>
</item>
<item>
  <title>Docker 镜像制作教程:减小镜像体积</title>
  <link>https://www.qilitang.top/posts/docker-%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B-%E5%87%8F%E5%B0%8F%E9%95%9C%E5%83%8F%E4%BD%93%E7%A7%AF/</link>
  <pubDate>Sun, 19 Nov 2023 17:06:11 &#43;0800</pubDate>
  <author>Qilitang</author>
  <guid>https://www.qilitang.top/posts/docker-%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B-%E5%87%8F%E5%B0%8F%E9%95%9C%E5%83%8F%E4%BD%93%E7%A7%AF/</guid>
  <description><![CDATA[Docker 镜像制作教程：减小镜像体积 原文链接： Docker Images : Part I - Reducing Image Size 对于刚接触容器的人来说，他们很容易被自己制作的 Docker 镜像体积吓到，我只需要一个几 MB 的可执行文件而已，为何镜像的体积会达到 1 GB 以上？本文将会介绍几个奇技淫巧来帮助你精简镜像，同时又不牺牲开发人员和运维人员的操作便利性。本系列文章将分为三个部分： 第一部]]></description>
</item>
<item>
  <title>Kibana Docker 容器安装</title>
  <link>https://www.qilitang.top/posts/elasticsearch-05-kibana/</link>
  <pubDate>Thu, 03 Sep 2020 17:06:11 &#43;0800</pubDate>
  <author>Qilitang</author>
  <guid>https://www.qilitang.top/posts/elasticsearch-05-kibana/</guid>
  <description><![CDATA[<p>docker 容器安装 Kibana</p>]]></description>
</item>
<item>
  <title>使用docker安装Elasticsearch 集群</title>
  <link>https://www.qilitang.top/posts/elasticsearch-04-docker-%E9%9B%86%E7%BE%A4/</link>
  <pubDate>Wed, 02 Sep 2020 17:06:11 &#43;0800</pubDate>
  <author>Qilitang</author>
  <guid>https://www.qilitang.top/posts/elasticsearch-04-docker-%E9%9B%86%E7%BE%A4/</guid>
  <description><![CDATA[<p>什么是ElasticSearch</p>]]></description>
</item>
<item>
  <title>Docker 详解</title>
  <link>https://www.qilitang.top/posts/docker/</link>
  <pubDate>Sun, 02 Dec 2018 17:06:11 &#43;0800</pubDate>
  <author>Qilitang</author>
  <guid>https://www.qilitang.top/posts/docker/</guid>
  <description><![CDATA[1 Docker的安装 1 2 3 4 5 6 7 8 9 10 # 1 yum 包更新到最新 yum update # 2 安装所需要的软件包, yum-util 提供yum-config-manager 功能, 另外两个是 devicemapper驱动以来的 yum install -y yum-utils device-mapper-persistent-data lvm2 # 3 设置yum 源 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo # 4 安装docker 出现输入的界面都按y yum install -y docker-ce # 5 查看docker的版本, 验证是否安装]]></description>
</item>
<item>
  <title>Docker 容器间通讯</title>
  <link>https://www.qilitang.top/posts/docker-%E5%AE%B9%E5%99%A8%E9%97%B4%E9%80%9A%E8%AE%AF/</link>
  <pubDate>Mon, 03 Sep 2018 17:06:11 &#43;0800</pubDate>
  <author>Qilitang</author>
  <guid>https://www.qilitang.top/posts/docker-%E5%AE%B9%E5%99%A8%E9%97%B4%E9%80%9A%E8%AE%AF/</guid>
  <description><![CDATA[Docker容器间通信 Docker会为每个创建的容器自动分配一个虚拟IP，这个虚拟IP无法从容器外侧进行访问，只是Docker环境内部容器间彼此通信的标识，容器间的网络是互通互联的。 但是通过这种虚拟IP方式，进行容器间的通信，有一些局限性。因为在Docker中创建一个容器非常容易，比如说新创建的My]]></description>
</item>
<item>
  <title>Docker-compose</title>
  <link>https://www.qilitang.top/posts/docker-compose/</link>
  <pubDate>Mon, 03 Sep 2018 17:06:11 &#43;0800</pubDate>
  <author>Qilitang</author>
  <guid>https://www.qilitang.top/posts/docker-compose/</guid>
  <description><![CDATA[安装 docker-compose 切换到root 用户 下载 1 curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose 修改权限 1 chmod +x /usr/local/bin/docker-compose 检查是否成功 1 docker-compose -version 此外，因为 docker-compose 使用 Python 编写，所以可以使用 pip 直接安装： 1 2 $ pip install -U docker-compose 1 第一个 Compose file 1 2 3 4 5 6 7 8 9 10 11 version: &#39;3&#39; services: spider: build: context: . dockerfile: Dockerfile volumes: - $PWD:/code - /data1/datascience/scrapy-data:/data command: scrapy crawl comment 12345678910 说明： version 指定了 compose file 的版本，最新的版本为 3.4 services 下定义服务，这里定义了一个爬虫服务 spider build 指定构建]]></description>
</item>
</channel>
</rss>
